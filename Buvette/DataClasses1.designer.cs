#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Buvette
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Buvette")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertProduit(Produit instance);
    partial void UpdateProduit(Produit instance);
    partial void DeleteProduit(Produit instance);
    partial void InsertSous_Produit(Sous_Produit instance);
    partial void UpdateSous_Produit(Sous_Produit instance);
    partial void DeleteSous_Produit(Sous_Produit instance);
    partial void Insertcommande(commande instance);
    partial void Updatecommande(commande instance);
    partial void Deletecommande(commande instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Buvette.Properties.Settings.Default.BuvetteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Produit> Produit
		{
			get
			{
				return this.GetTable<Produit>();
			}
		}
		
		public System.Data.Linq.Table<Sous_Produit> Sous_Produit
		{
			get
			{
				return this.GetTable<Sous_Produit>();
			}
		}
		
		public System.Data.Linq.Table<commande> commande
		{
			get
			{
				return this.GetTable<commande>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produit")]
	public partial class Produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ref_produit;
		
		private string _nom;
		
		private EntitySet<Sous_Produit> _Sous_Produit;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onref_produitChanging(string value);
    partial void Onref_produitChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    #endregion
		
		public Produit()
		{
			this._Sous_Produit = new EntitySet<Sous_Produit>(new Action<Sous_Produit>(this.attach_Sous_Produit), new Action<Sous_Produit>(this.detach_Sous_Produit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ref_produit", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ref_produit
		{
			get
			{
				return this._ref_produit;
			}
			set
			{
				if ((this._ref_produit != value))
				{
					this.Onref_produitChanging(value);
					this.SendPropertyChanging();
					this._ref_produit = value;
					this.SendPropertyChanged("ref_produit");
					this.Onref_produitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Sous_Produit", Storage="_Sous_Produit", ThisKey="ref_produit", OtherKey="ref_produit")]
		public EntitySet<Sous_Produit> Sous_Produit
		{
			get
			{
				return this._Sous_Produit;
			}
			set
			{
				this._Sous_Produit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sous_Produit(Sous_Produit entity)
		{
			this.SendPropertyChanging();
			entity.Produit = this;
		}
		
		private void detach_Sous_Produit(Sous_Produit entity)
		{
			this.SendPropertyChanging();
			entity.Produit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sous_Produit")]
	public partial class Sous_Produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_sous_produit;
		
		private string _nom;
		
		private System.Nullable<int> _qte;
		
		private System.Nullable<double> _prix_unitaire;
		
		private string _ref_produit;
		
		private System.Nullable<int> _id_commande;
		
		private EntityRef<Produit> _Produit;
		
		private EntityRef<commande> _commande;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sous_produitChanging(string value);
    partial void Onid_sous_produitChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnqteChanging(System.Nullable<int> value);
    partial void OnqteChanged();
    partial void Onprix_unitaireChanging(System.Nullable<double> value);
    partial void Onprix_unitaireChanged();
    partial void Onref_produitChanging(string value);
    partial void Onref_produitChanged();
    partial void Onid_commandeChanging(System.Nullable<int> value);
    partial void Onid_commandeChanged();
    #endregion
		
		public Sous_Produit()
		{
			this._Produit = default(EntityRef<Produit>);
			this._commande = default(EntityRef<commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sous_produit", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_sous_produit
		{
			get
			{
				return this._id_sous_produit;
			}
			set
			{
				if ((this._id_sous_produit != value))
				{
					this.Onid_sous_produitChanging(value);
					this.SendPropertyChanging();
					this._id_sous_produit = value;
					this.SendPropertyChanged("id_sous_produit");
					this.Onid_sous_produitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(50)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qte", DbType="Int")]
		public System.Nullable<int> qte
		{
			get
			{
				return this._qte;
			}
			set
			{
				if ((this._qte != value))
				{
					this.OnqteChanging(value);
					this.SendPropertyChanging();
					this._qte = value;
					this.SendPropertyChanged("qte");
					this.OnqteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prix_unitaire", DbType="Float")]
		public System.Nullable<double> prix_unitaire
		{
			get
			{
				return this._prix_unitaire;
			}
			set
			{
				if ((this._prix_unitaire != value))
				{
					this.Onprix_unitaireChanging(value);
					this.SendPropertyChanging();
					this._prix_unitaire = value;
					this.SendPropertyChanged("prix_unitaire");
					this.Onprix_unitaireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ref_produit", DbType="VarChar(30)")]
		public string ref_produit
		{
			get
			{
				return this._ref_produit;
			}
			set
			{
				if ((this._ref_produit != value))
				{
					if (this._Produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onref_produitChanging(value);
					this.SendPropertyChanging();
					this._ref_produit = value;
					this.SendPropertyChanged("ref_produit");
					this.Onref_produitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_commande", DbType="Int")]
		public System.Nullable<int> id_commande
		{
			get
			{
				return this._id_commande;
			}
			set
			{
				if ((this._id_commande != value))
				{
					if (this._commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_commandeChanging(value);
					this.SendPropertyChanging();
					this._id_commande = value;
					this.SendPropertyChanged("id_commande");
					this.Onid_commandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produit_Sous_Produit", Storage="_Produit", ThisKey="ref_produit", OtherKey="ref_produit", IsForeignKey=true)]
		public Produit Produit
		{
			get
			{
				return this._Produit.Entity;
			}
			set
			{
				Produit previousValue = this._Produit.Entity;
				if (((previousValue != value) 
							|| (this._Produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produit.Entity = null;
						previousValue.Sous_Produit.Remove(this);
					}
					this._Produit.Entity = value;
					if ((value != null))
					{
						value.Sous_Produit.Add(this);
						this._ref_produit = value.ref_produit;
					}
					else
					{
						this._ref_produit = default(string);
					}
					this.SendPropertyChanged("Produit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commande_Sous_Produit", Storage="_commande", ThisKey="id_commande", OtherKey="id_commande", IsForeignKey=true)]
		public commande commande
		{
			get
			{
				return this._commande.Entity;
			}
			set
			{
				commande previousValue = this._commande.Entity;
				if (((previousValue != value) 
							|| (this._commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commande.Entity = null;
						previousValue.Sous_Produit.Remove(this);
					}
					this._commande.Entity = value;
					if ((value != null))
					{
						value.Sous_Produit.Add(this);
						this._id_commande = value.id_commande;
					}
					else
					{
						this._id_commande = default(Nullable<int>);
					}
					this.SendPropertyChanged("commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commande")]
	public partial class commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_commande;
		
		private System.Nullable<System.DateTime> _date_com;
		
		private EntitySet<Sous_Produit> _Sous_Produit;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_commandeChanging(int value);
    partial void Onid_commandeChanged();
    partial void Ondate_comChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_comChanged();
    #endregion
		
		public commande()
		{
			this._Sous_Produit = new EntitySet<Sous_Produit>(new Action<Sous_Produit>(this.attach_Sous_Produit), new Action<Sous_Produit>(this.detach_Sous_Produit));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_commande", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_commande
		{
			get
			{
				return this._id_commande;
			}
			set
			{
				if ((this._id_commande != value))
				{
					this.Onid_commandeChanging(value);
					this.SendPropertyChanging();
					this._id_commande = value;
					this.SendPropertyChanged("id_commande");
					this.Onid_commandeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_com", DbType="Date")]
		public System.Nullable<System.DateTime> date_com
		{
			get
			{
				return this._date_com;
			}
			set
			{
				if ((this._date_com != value))
				{
					this.Ondate_comChanging(value);
					this.SendPropertyChanging();
					this._date_com = value;
					this.SendPropertyChanged("date_com");
					this.Ondate_comChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commande_Sous_Produit", Storage="_Sous_Produit", ThisKey="id_commande", OtherKey="id_commande")]
		public EntitySet<Sous_Produit> Sous_Produit
		{
			get
			{
				return this._Sous_Produit;
			}
			set
			{
				this._Sous_Produit.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sous_Produit(Sous_Produit entity)
		{
			this.SendPropertyChanging();
			entity.commande = this;
		}
		
		private void detach_Sous_Produit(Sous_Produit entity)
		{
			this.SendPropertyChanging();
			entity.commande = null;
		}
	}
}
#pragma warning restore 1591
